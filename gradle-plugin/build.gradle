plugins {
  id 'java-gradle-plugin'
  id 'com.gradle.plugin-publish' version "$GRADLE_PLUGIN_PUBLISH_VERSION"
}

repositories {
  maven { url "https://kotlin.bintray.com/kotlinx" }
  maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
  maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
  mavenCentral()
  jcenter()
}

group = 'io.arrow-kt'
version = VERSION_NAME
def pluginId = 'io.arrow-kt.arrow'

processResources {
  filesMatching('**/plugin.properties') {
    filter {
      it.replace('%COMPILER_PLUGIN_VERSION%', VERSION_NAME)
    }
  }
}

dependencies {
  implementation gradleApi()
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION"
  implementation "org.jetbrains.kotlin:kotlin-gradle-plugin-api:$KOTLIN_VERSION"
  implementation "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
  implementation "io.github.classgraph:classgraph:$CLASS_GRAPH_VERSION"
  implementation "xerces:xercesImpl:$XERCES_VERSION"
  runtime "io.arrow-kt:compiler-plugin:$VERSION_NAME"
}

compileKotlin {
  kotlinOptions.jvmTarget = "$JVM_TARGET_VERSION"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "$JVM_TARGET_VERSION"
}

jar {
  manifest {
    attributes["Specification-Title"] = project.name
    attributes["Specification-Version"] = project.version
    attributes["Implementation-Title"] = pluginId
    attributes["Implementation-Version"] = project.version
  }
}

// Required to put the Kotlin plugin on the classpath for the functional test suite
tasks.withType(PluginUnderTestMetadata).configureEach {
  pluginClasspath.from(configurations.compileOnly)
}

gradlePlugin {
  plugins {
    arrow {
      id = pluginId
      implementationClass = "arrow.meta.plugin.gradle.ArrowGradlePlugin"
    }
  }
}

pluginBundle {
  website = "https://meta.arrow-kt.io"
  vcsUrl = "https://github.com/arrow-kt/arrow-meta"
  description = "Functional companion to Kotlin's Compiler"
  tags = ["kotlin", "compiler", "arrow", "plugin", "meta"]

  plugins {
    arrow {
      displayName = "Arrow Meta Gradle Plugin"
    }
  }
}
