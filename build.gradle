buildscript {
  ext {
    kotlin_version = '1.3.50'
    kotlin_test_version = '3.3.1'
    assertj_version = '3.13.2'
    dokka_version = '0.9.18'
    class_graph_version = '4.8.47'
  }
  repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
  }
  dependencies {
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    classpath 'io.arrow-kt:ank-gradle-plugin:0.7.1'
  }
}

plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.50'
  id 'org.jetbrains.kotlin.kapt' version '1.3.50'
  id 'com.github.johnrengelman.shadow' version '5.0.0'
  id 'com.jfrog.bintray' version "1.8.4"
}

def pathApiDocs = "${rootDir}/docs/docs/apidocs"

allprojects {

  clean.doFirst {
    delete "${rootDir}/infographic/arrow-infographic.txt"
    delete pathApiDocs
  }

  repositories {
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven {
      url "https://dl.bintray.com/arrow-kt/arrow-kt/"
      content {
        includeGroup "io.arrow-kt"
      }
    }
    mavenCentral()
    jcenter()
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
  }
}

subprojects { project ->

  group = GROUP
  version = VERSION_NAME

  apply plugin: 'kotlin'
  apply plugin: 'org.jetbrains.dokka'

  //dokka log spam `Can't find node by signature` comes from https://github.com/Kotlin/dokka/issues/269
  dokka {
    outputFormat = 'jekyll'
    outputDirectory = pathApiDocs

    includes = ['README.md']
    reportUndocumented = false

    // Specifies the location of the project source code on the Web.
    // If provided, Dokka generates "source" links for each declaration.
    // Repeat for multiple mappings
    linkMapping {
      // Source directory
      dir = "src/main/kotlin"

      // URL showing where the source code can be accessed through the web browser
      url = "https://github.com/arrow-kt/arrow/blob/master/${relativeProjectPath('src/main/kotlin')}"

      // Suffix which is used to append the line number to the URL. Use #L for GitHub
      suffix = "#L"
    }
  }

  apply plugin: 'com.jfrog.bintray'

  bintray {
      publish = true
      user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
      key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
      configurations = ['archives']
      pkg {
          repo = 'arrow-kt'
          name = project.name
          userOrg = POM_DEVELOPER_ID
          licenses = ['Apache-2.0']
          vcsUrl = 'https://github.com/arrow-kt/arrow-meta.git'
      }
  }
}

task buildMeta {
  dependsOn 'clean'
  dependsOn 'build'
  dependsOn ':gradle-plugin:publishArrowPluginMarkerMavenPublicationToMavenLocal'
  dependsOn ':gradle-plugin:publishPluginMavenPublicationToMavenLocal'
  tasks.findByPath(':gradle-plugin:publishArrowPluginMarkerMavenPublicationToMavenLocal').mustRunAfter 'build'
  tasks.findByPath(':gradle-plugin:publishPluginMavenPublicationToMavenLocal').mustRunAfter 'build'
}

task publishAndRunIde {
  dependsOn ':buildMeta'
  dependsOn ':idea-plugin:runIde'
  tasks.findByPath(':idea-plugin:runIde').mustRunAfter ':buildMeta'
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
  gradleVersion = "5.6.1"
}
