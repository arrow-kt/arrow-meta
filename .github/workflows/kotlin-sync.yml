name: Kotlin sync

on:
  schedule:
    - cron: '0 9 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Update versions
      id: update
      run: |
        LATEST_EAP_VERSION=$(curl https://dl.bintray.com/kotlin/kotlin-eap/org/jetbrains/kotlin/kotlin-compiler/maven-metadata.xml | grep latest | cut -d'>' -f2 | cut -d'<' -f1)
        echo "Latest EAP version: $LATEST_EAP_VERSION"
        echo ::set-output name=version::"$LATEST_EAP_VERSION"
        sed -i "s/^KOTLIN_VERSION=.*$/KOTLIN_VERSION=$LATEST_EAP_VERSION/g" gradle.properties
        NEW_VERSION=$(echo $LATEST_EAP_VERSION | cut -d- -f1)
        sed -i "s/^VERSION_NAME=.*$/VERSION_NAME=${NEW_VERSION}-SNAPSHOT/g" gradle.properties
        echo ::set-output name=differences::$(git diff gradle.properties)
    - name: Build Arrow Meta
      if: steps.update.outputs.differences != ''
      run: |
        ./gradlew :compiler-plugin:build 2> stderr
        ./gradlew :idea-plugin:build 2> stderr
        ./gradlew :testing-plugin:build 2> stderr
        ./gradlew :gradle-plugin:jar 2> stderr
    - name: Prepare the environment to create the pull request
      if: steps.update.outputs.differences != ''
      run: rm -f stderr
    - name: Create pull request
      if: steps.update.outputs.differences != ''
      uses: peter-evans/create-pull-request@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Sync with Kotlin version
        title: Sync with Kotlin version
        body: Generated automatically
        branch: sync/kotlin
        branch-suffix: short-commit-hash
    - name: Prepare environment to create the issue (Node)
      if: failure()
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Prepare environment to create the issue (new package)
      if: failure()
      run: |
        echo ${{ steps.update.outputs.version }} > version
        echo "* LINK: https://github.com/arrow-kt/arrow-meta/commit/$GITHUB_SHA/checks" >> stderr
        rm -rf /home/runner/work/_actions/actions/github-script/0.3.0/node_modules
        cd /home/runner/work/_actions/actions/github-script/0.3.0/
        npm install
        npm install xmlhttprequest
    - name: Create the issue
      if: failure()
      uses: actions/github-script@0.3.0
      with:
        github-token: ${{github.token}}
        script: |
          var XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
          function readFile(file) {
            var content;
            var rawFile = new XMLHttpRequest();
            rawFile.open("GET", file, false);
            rawFile.onreadystatechange = function () {
                content = rawFile.responseText;
            }
            rawFile.send();
            return content;
          }
          await github.issues.create({...context.repo, 
            title: 'Sync with Kotlin Compiler: ' + readFile("file:///home/runner/work/arrow-meta/arrow-meta/version"), 
            body: ' * FAILURE: \n' + readFile("file:///home/runner/work/arrow-meta/arrow-meta/stderr"),
            assignees: ['raulraja', 'i-walker', 'ahinchman1', 'rachelcarmena'],
            labels: ['critical', 'Kotlin version upgrade']});
