name: Build Artifacts

on: pull_request

jobs:
  build_artifacts:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64
    - name: Set compatibility IDEA versions
      run: |
        KOTLIN_VERSION=$(grep KOTLIN_VERSION gradle.properties | cut -d= -f2)
        BRANCH_NUMBER=$(grep INTELLIJ_IDEA_VERSION gradle.properties | cut -d= -f2 | cut -b 3-4,6)
        curl -o plugin.xml https://raw.githubusercontent.com/JetBrains/kotlin/v$KOTLIN_VERSION/idea/resources/META-INF/plugin.xml.$BRANCH_NUMBER
        SINCE_BUILD=$(cat plugin.xml | grep -o -e 'since-build="[^"]\+"' | cut -d= -f2)
        UNTIL_BUILD=$(cat plugin.xml | grep -o -e 'until-build="[^"]\+"' | cut -d= -f2)
        sed -i "s/patchPluginXml {/patchPluginXml {\\nsinceBuild $SINCE_BUILD\\nuntilBuild $UNTIL_BUILD/g" idea-plugin/build.gradle
    - name: Build with Gradle
      env:
        JAVA_OPTS: -Xms512m -Xmx1024m
      run: |
        ./gradlew clean
        ./gradlew :compiler-plugin:build
        ./gradlew :idea-plugin:build
        ./gradlew :meta-test:build
        # 'build' task is not executed for :gradle-plugin because
        # it depends on the publication of compiler-plugin 
        # and it could fail when changing version
        ./gradlew :gradle-plugin:jar
        # :docs is considered in another workflow
    - name: Check next version
      env:
        JAVA_OPTS: -Xms512m -Xmx1024m
      run: |
        echo "Is there an upcoming version to check?"
        sed -i "s/mavenCentral()/mavenCentral()\\nmaven { url \"https:\/\/dl.bintray.com\/kotlin\/kotlin-dev\/\" }/g" build.gradle
        for patch in $(ls -v .github/workflows/sandbox/*.diff); do
          echo "Checking $patch ..."
          PATCH_VERSION=$(basename -s .diff $patch)
          NEXT_VERSION=$(curl https://dl.bintray.com/kotlin/kotlin-dev/org/jetbrains/kotlin/kotlin-compiler/maven-metadata.xml | grep $PATCH_VERSION | tail -1 | cut -d'>' -f2 | cut -d'<' -f1)
          echo "For version $NEXT_VERSION ..."
          git apply $patch
          git status
          sed -i "s/^KOTLIN_VERSION=.*$/KOTLIN_VERSION=$NEXT_VERSION/g" gradle.properties
          ./gradlew clean :compiler-plugin:jar # TODO: build
        done
