name: Publish Artifacts

on:
  push:
    branches:
    - master

jobs:
  publish_artifacts:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64
    - name: Set compatibility IDEA versions
      run: |
        KOTLIN_VERSION=$(grep KOTLIN_VERSION gradle.properties | cut -d= -f2)
        BRANCH_NUMBER=$(grep INTELLIJ_IDEA_VERSION gradle.properties | cut -d= -f2 | cut -b 3-4,6)
        curl -o plugin.xml https://raw.githubusercontent.com/JetBrains/kotlin/v$KOTLIN_VERSION/idea/resources/META-INF/plugin.xml.$BRANCH_NUMBER
        SINCE_BUILD=$(cat plugin.xml | grep -o -e 'since-build="[^"]\+"' | cut -d= -f2)
        UNTIL_BUILD=$(cat plugin.xml | grep -o -e 'until-build="[^"]\+"' | cut -d= -f2)
        sed -i "s/patchPluginXml {/patchPluginXml {\\nsinceBuild $SINCE_BUILD\\nuntilBuild $UNTIL_BUILD/g" idea-plugin/build.gradle
        sed -i "s/%SINCE_BUILD%/$SINCE_BUILD/g" .github/workflows/templates/updatePlugins.xml
        sed -i "s/%UNTIL_BUILD%/$UNTIL_BUILD/g" .github/workflows/templates/updatePlugins.xml
    - name: Build with Gradle
      env:
        JAVA_OPTS: -Xms512m -Xmx1024m
      run: |
        ./gradlew clean
        ./gradlew :compiler-plugin:build
        ./gradlew :idea-plugin:build
        ./gradlew :meta-test:build
        # 'build' task is not executed for :gradle-plugin because
        # it depends on the publication of compiler-plugin 
        # and it could fail when changing version
        ./gradlew :gradle-plugin:jar
        # :docs is considered in another workflow
    - name: Check properties
      id: properties
      run: |
        ACTUAL_VERSION=$(grep -e "^VERSION_NAME=.*$" gradle.properties | cut -d= -f2)
        if [[ "$ACTUAL_VERSION" == *-SNAPSHOT ]]; then echo "::set-output name=is-snapshot::true"; else echo "::set-output name=is-snapshot::false"; fi
    - name: Updates when snapshot
      if: steps.properties.outputs.is-snapshot == 'true'
      run: |
        echo "apply from: 'https://raw.githubusercontent.com/arrow-kt/arrow/master/gradle/gradle-mvn-push.gradle'" >> gradle-plugin/build.gradle 
    - name: Publish artifacts
      env:
        BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
        BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
      run: |
        echo "NOTE: docs has its own publication workflows"
        echo "Uploading artifacts..."
        ./gradlew uploadArchives
        echo "$(cat gradle.properties | grep VERSION_NAME | cut -d'=' -f2) deployed!"
    - name: Publish Gradle Plugin
      if: steps.properties.outputs.is-snapshot == 'false'
      env:
        JAVA_OPTS: -Xms512m -Xmx1024m
        GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
        GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
      run: |
        echo "Publish Gradle Plugin in Gradle Plugins Portal ..."
        ./gradlew -Dgradle.publish.key=$GRADLE_PUBLISH_KEY -Dgradle.publish.secret=$GRADLE_PUBLISH_SECRET publishPlugins
    - name: Publish IDEA plugin repository
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
      if: steps.properties.outputs.is-snapshot == 'true'
      run: |
        VERSION_NAME=$(grep VERSION_NAME gradle.properties | cut -d= -f2)
        VERSION_NUMBER=$(echo $VERSION_NAME | cut -d- -f1)
        curl -o maven-metadata.xml https://oss.jfrog.org/artifactory/oss-snapshot-local/io/arrow-kt/idea-plugin/$VERSION_NAME/maven-metadata.xml
        TIMESTAMP=$(grep timestamp maven-metadata.xml | cut -d'>' -f2 | cut -d'<' -f1)
        BUILD_NUMBER=$(grep buildNumber maven-metadata.xml | cut -d'>' -f2 | cut -d'<' -f1)
        sed -i "s/%MAIN_VERSION%/$VERSION_NAME/g" .github/workflows/templates/updatePlugins.xml
        sed -i "s/%SPECIFIC_VERSION%/$VERSION_NUMBER-$TIMESTAMP-$BUILD_NUMBER/g" .github/workflows/templates/updatePlugins.xml
        mkdir -p artifacts/idea-plugin/snapshots/$VERSION_NAME
        cp .github/workflows/templates/updatePlugins.xml artifacts/idea-plugin/snapshots/$VERSION_NAME/
        aws s3 cp artifacts s3://$S3_BUCKET --recursive > aws_sync_jekyll.log
