name: Publish Artifacts

on:
  push:
    branches:
    - master

jobs:
  publish_artifacts:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64
    - name: Build with Gradle
      env:
        JAVA_OPTS: -Xms512m -Xmx1024m
      run: |
        ./gradlew clean
        ./gradlew :compiler-plugin:build
        ./gradlew :idea-plugin:build
        ./gradlew :testing-plugin:build
        # 'build' task is not executed for :gradle-plugin because
        # it depends on the publication of compiler-plugin 
        # and it could fail when changing version
        ./gradlew :gradle-plugin:jar
        # :docs is considered in another workflow
    - name: Publish artifacts
      env:
        BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
        BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
      run: |
        echo "NOTE: gradle-plugin and docs have their own publication workflows" 
        echo "Uploading idea-plugin, testing-plugin and compiler-plugin..."
        ./gradlew uploadArchives
        echo "$(cat gradle.properties | grep VERSION_NAME | cut -d'=' -f2) deployed!"
    - name: Publish Gradle Plugin
      env:
        JAVA_OPTS: -Xms512m -Xmx1024m
        GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
        GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
      run: |
        ACTUAL_VERSION=$(grep -e "^VERSION_NAME=.*$" gradle.properties | cut -d= -f2)
        VERSION_NUMBER=$(echo $ACTUAL_VERSION | cut -d- -f1)
        LATEST_VERSION=$(curl https://plugins.gradle.org/m2/io/arrow-kt/arrow/io.arrow-kt.arrow.gradle.plugin/maven-metadata.xml | grep latest | cut -d'>' -f2 | cut -d'<' -f1)
        echo "Latest version: $LATEST_VERSION"
        COUNT=$(echo $LATEST_VERSION | cut -d- -f2)
        if [[ "$COUNT" == "$LATEST_VERSION" ]]; then NEXT_COUNT=0; else NEXT_COUNT=$(($COUNT + 1)); fi
        LAST_COMMIT_HASH=$(git log -1 --pretty=%h)
        echo "Checking if version ends with SNAPSHOT to add a commit hash ..."
        echo $ACTUAL_VERSION | grep SNAPSHOT; if [[ $? -eq 0 ]]; then sed -i "s/^version = .*$/version = '$VERSION_NUMBER-$NEXT_COUNT-$LAST_COMMIT_HASH'/g" gradle-plugin/build.gradle; fi
        echo "Publish artifact ..."
        ./gradlew -Dgradle.publish.key=$GRADLE_PUBLISH_KEY -Dgradle.publish.secret=$GRADLE_PUBLISH_SECRET publishPlugins
